import { CmdRunner } from '../../modules/cli/CmdRunner';
import { TestScriptExecutionOptions } from '../../modules/ts/TestScriptExecution';
import { OutputFileWriter } from "../../modules/cli/OutputFileWriter";

/**
 * Executes test scripts generated by Concordia using CodeceptJS.
 * 
 * @author Matheus Eller Fagundes
 */
export class TestScriptExecutor {
    
    constructor( private _fileWriter: OutputFileWriter, private _cmd: CmdRunner ) {
    }

    /**
     * Executes the script according to the options given.
     * 
     * @param options Execution options
     */
    public execute( options: TestScriptExecutionOptions ): Promise< any > {

        // It's only possible to run CodeceptJS if there is a 'codecept.json' file in the folder.
        this._fileWriter.write( '{}', options.sourceCodeDir, 'codecept', 'json' );

        const commandConfig: object = {
            helpers: {
                WebDriverIO: {
                    browser: "chrome",
                    url: "http://localhost:8080"
                }
            },
            tests: "*.js"            
        };
        const configStr: string = JSON.stringify( commandConfig );

        let testCommand: string = `codeceptjs run --steps --override '${configStr}' -c ${ options.sourceCodeDir }`;

        return this._cmd.run( testCommand );
    }

}
